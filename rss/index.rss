<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>Mic Cassano</title><description>Day-to-day stories of a journey into web development.</description><link>http://localhost:2368/</link><generator>Ghost 0.7</generator><lastBuildDate>Wed, 06 Apr 2016 21:06:43 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Why I Set Out to Learn Ruby and Came Out Coding JavaScript</title><description>&lt;h2 id="javascripteatworld"&gt;JavaScript Eat World&lt;/h2&gt;

&lt;p&gt;JavaScript is taking over the internet. Even if you‚Äôve never written a single line of code you‚Äôve probably heard of this mysterious thing that lives in your browser and is only mentioned by people with waxed moustaches and plaid shirts.&lt;/p&gt;

&lt;p&gt;There are good reasons why&lt;/p&gt;</description><link>http://localhost:2368/javascript-eat-world/</link><guid isPermaLink="false">8596b13e-7f73-47e7-a6f2-f28c78f043d8</guid><category>coding</category><category>javascript</category><category>web development</category><dc:creator>Mic Cassano</dc:creator><pubDate>Wed, 06 Apr 2016 20:07:03 GMT</pubDate><media:content url="http://localhost:2368/content/images/2016/04/photo-1422246654994-34520d5a0340.jpeg" medium="image"/><content:encoded>&lt;h2 id="javascripteatworld"&gt;JavaScript Eat World&lt;/h2&gt;

&lt;img src="http://localhost:2368/content/images/2016/04/photo-1422246654994-34520d5a0340.jpeg" alt="Why I Set Out to Learn Ruby and Came Out Coding JavaScript"&gt;&lt;p&gt;JavaScript is taking over the internet. Even if you‚Äôve never written a single line of code you‚Äôve probably heard of this mysterious thing that lives in your browser and is only mentioned by people with waxed moustaches and plaid shirts.&lt;/p&gt;

&lt;p&gt;There are good reasons why it‚Äôs penetrated the zeitgeist: it‚Äôs arguably the &lt;a href="http://arc.applause.com/2016/03/22/javascript-is-the-worlds-dominant-programming-language/"&gt;most popular programming language in the world&lt;/a&gt; and you interact with it every day when you‚Äôre browsing the web. Over the past couple of years it‚Äôs even gone &lt;strong&gt;full-stack&lt;/strong&gt;; this means that you can now use JavaScript to write programs not only in the browser, but on the server that hosts your program, as well as the database that stores all of its information. This is a big deal, as it‚Äôs the only language that can do this.&lt;/p&gt;

&lt;p&gt;However, JavaScript is a &lt;strong&gt;clunky&lt;/strong&gt;, ugly language ‚Äî it‚Äôs a real pain to write, especially in comparison to hip, new languages like Ruby. And yet, in a recent &lt;a href="http://stackoverflow.com/research/developer-survey-2016#technology"&gt;survey&lt;/a&gt;, more than 55% of developers use JavaScript, while only around 9% use Ruby. Even I fit into this paradigm to some extent: I &lt;a href="http://mic-css.github.io/47-ronin/"&gt;went to coding bootcamp&lt;/a&gt; to learn Ruby and somehow ended up writing my final project &lt;em&gt;entirely&lt;/em&gt; in JavaScript. I‚Äôm still not sure if it‚Äôs just plain old masochism, but in this post I explain what, in my opinion, makes JavaScript the best love-hate relationship a programmer can have. Up first, a quick primer.&lt;/p&gt;

&lt;h2 id="javascriptwasntbuiltinaday"&gt;JavaScript Wasn‚Äôt Built In a Day&lt;/h2&gt;

&lt;p&gt;JavaScript was infamously &lt;a href="https://www.w3.org/community/webed/wiki/A_Short_History_of_JavaScript"&gt;written in 10 days&lt;/a&gt; üò± back in 1995. Its &lt;a href="http://eloquentjavascript.net/00_intro.html#p_NnFf9SYflZ"&gt;purpose&lt;/a&gt; was to add programs to web pages in the browser, and to its credit it‚Äôs still going strong more than 20 years later. Pretty much every modern website relies heavily on JavaScript, so you can probably appreciate its role in your everyday life ‚Äî email, news, directions, communications, Google‚Ä¶  It‚Äôs thanks to JavaScript that we have &lt;strong&gt;web apps&lt;/strong&gt; (think software in your browser, like Netflix or Google Drive).&lt;/p&gt;

&lt;p&gt;Unfortunately that reduced amount of time is painfully obvious when coding in JavaScript. It‚Äôs the butt of many programmer jokes (such as this &lt;a href="https://www.destroyallsoftware.com/talks/wat"&gt;hilarious talk&lt;/a&gt;) because it‚Äôs so quirky. You could easily spend an hour in a heated debate about whether or not you should use semicolons. &lt;em&gt;Semicolons!!!&lt;/em&gt; More importantly though, its standard library ‚Äî the set of functionality that the language comes with ‚Äúout of the box‚Äù ‚Äî is &lt;a href="https://medium.com/@thomasfuchs/what-if-we-had-a-great-standard-library-in-javascript-52692342ee3f#.nw0wjiqu0"&gt;relatively terrible&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Every new version of the language tries to improve on this issue, however, such a foundational technology is difficult to change. When so many programs and websites use JavaScript, it‚Äôs almost impossible to make significant changes without simply pulling the rug out from underneath them. Every change has to be incremental, backwards-compatible and thoroughly discussed and reviewed. The entire process can be overwhelmingly difficult; One does not simply re-build the foundations of something. Witness the chaos caused by the roadworks to fix the foundations of the Hammersmith Flyover in West London! (Sorry, personal gripe‚Ä¶)&lt;/p&gt;

&lt;p&gt;As a result, the JavaScript world has grown reliant on tiny &lt;strong&gt;packages&lt;/strong&gt; that you can pull into your program to give you extra functionality: these are a great way to make your code more modular and cut down on development times, but when they‚Äôre not built into the language they risk being volatile. A recent trademark &lt;a href="http://blog.christoffer.me/no-we-havent-forgotten-how-to-code-javascript-just-needs-to-become-a-better-language/"&gt;debacle&lt;/a&gt; pushed a developer to withdraw his packages, including one (a whopping &lt;em&gt;11 lines of code&lt;/em&gt;) that almost broke the internet as so many programs and applications depended on it for an arguably basic task. This all caused a lot of interesting debate about the past, present and future of JavaScript and will certainly improve the publishing process for packages, but it might not necessarily have an effect on JavaScript itself.&lt;/p&gt;

&lt;p&gt;So why the hype?&lt;/p&gt;

&lt;h2 id="youdontnodewhatyoudontnode"&gt;You Don‚Äôt Node What You Don‚Äôt Node&lt;/h2&gt;

&lt;p&gt;JavaScript's popularity might be an attractive enough reason to learn it in itself. Stack Overflow, the go-to online forum for programming questions, recently released its latest &lt;a href="http://stackoverflow.com/research/developer-survey-2016"&gt;developer survey&lt;/a&gt; -- something of a "State of the Union" affair in the developer word -- and JavaScript blew all other technologies out of the water in terms of both usage and interest.&lt;/p&gt;

&lt;p&gt;Some of the most popular technologies out there at the moment, whether on developers' to-do list or employers' hit-list, are JavaScript variants or frameworks. Two salient names are &lt;strong&gt;AngularJS&lt;/strong&gt; and &lt;strong&gt;Node.js&lt;/strong&gt;, a front-end framework and a back-end environment respectively. This is a particularly clear indicator that JavaScript, the ugly duckling of modern programming languages, is taking over the stack in an impressive coup d'√©tat -- and not without some top-notch branding too, since one particular JavaScript stack has the catchy acronym &lt;strong&gt;MEAN&lt;/strong&gt; (MongoDB, Express.js, AngularJS and Node.js).&lt;/p&gt;

&lt;p&gt;A full-stack language is an entirely new paradigm in the programming world and its long-term viability remains to be proven, as mentioned earlier. Nonetheless, there are some clear benefits to having a full-stack language, the first of which is that developers can reuse their skills up and down the stack. This means tighter integration as developers are more au fait with the stack in its entirety, more reusability and mobility of developers and more standardisation in the industry. &lt;/p&gt;

&lt;p&gt;Moreover, JavaScript lends itself particularly well to certain uses that are becoming more and more common on the web. Two such examples are: &lt;br&gt;
* Storing data in the same format that you would then use to send the information to the browser (&lt;strong&gt;JSON&lt;/strong&gt;, or JavaScript Object Notation). Remember, your browser already speaks JavaScript.
* Handling high volumes of simultaneous traffic (&lt;strong&gt;concurrency&lt;/strong&gt;), which is one of the reasons Node.js is being used at companies like Netflix, Uber and PayPal.&lt;/p&gt;

&lt;h2 id="onelanguagetorulethemall"&gt;One Language to Rule Them All&lt;/h2&gt;

&lt;p&gt;JavaScript is like English: despite it being a vibrant pastiche of different languages with some mind-boggling rules, it is flexible and ubiquitous, making it an unlikely shoo-in as the &lt;em&gt;de facto&lt;/em&gt; language of the web.&lt;/p&gt;

&lt;p&gt;If you‚Äôre a curious developer or someone who is thinking about learning to program, I strongly recommend looking into JavaScript, as it will open up many, many doors to exciting technologies and opportunities (as long as you can stomach a barrage of brackets and semicolons).&lt;/p&gt;

&lt;p&gt;And whether or not you‚Äôre into code, next time you fire up Chrome, take a moment to appreciate the awesome and bizarre dark horse that is JS.&lt;/p&gt;</content:encoded></item><item><title>So What Is a Coding Bootcamp Anyway?</title><description>&lt;h2 id="dojokun"&gt;Dojo Kun&lt;/h2&gt;

&lt;p&gt;Coding bootcamps are intensive vocational programs aimed at teaching people of all ages and backgrounds how to code and they‚Äôre &lt;a href="http://techcrunch.com/2016/03/05/3-signs-youll-soon-be-attending-a-coding-bootcamp-at-your-college/"&gt;rapidly&lt;/a&gt; &lt;a href="http://www.bloomberg.com/news/articles/2015-05-07/coding-classes-attract-college-grads-who-want-better-jobs"&gt;gaining&lt;/a&gt; &lt;a href="http://www.bloomberg.com/news/articles/2015-10-22/google-launches-a-developer-boot-camp-promising-jobs-for-graduates"&gt;traction&lt;/a&gt;. There are a couple of high-profile names and a handful of new kids on the block, mostly in the U.S. and Europe, each&lt;/p&gt;</description><link>http://localhost:2368/dojo-kun/</link><guid isPermaLink="false">80ba6015-55de-4aa5-beab-b0d0c7cdaa9b</guid><category>coding</category><category>bootcamp</category><dc:creator>Mic Cassano</dc:creator><pubDate>Tue, 08 Mar 2016 18:11:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2016/03/1-oqaGAgAvEQFN6RgE0W0Tuw.jpeg" medium="image"/><content:encoded>&lt;h2 id="dojokun"&gt;Dojo Kun&lt;/h2&gt;

&lt;img src="http://localhost:2368/content/images/2016/03/1-oqaGAgAvEQFN6RgE0W0Tuw.jpeg" alt="So What Is a Coding Bootcamp Anyway?"&gt;&lt;p&gt;Coding bootcamps are intensive vocational programs aimed at teaching people of all ages and backgrounds how to code and they‚Äôre &lt;a href="http://techcrunch.com/2016/03/05/3-signs-youll-soon-be-attending-a-coding-bootcamp-at-your-college/"&gt;rapidly&lt;/a&gt; &lt;a href="http://www.bloomberg.com/news/articles/2015-05-07/coding-classes-attract-college-grads-who-want-better-jobs"&gt;gaining&lt;/a&gt; &lt;a href="http://www.bloomberg.com/news/articles/2015-10-22/google-launches-a-developer-boot-camp-promising-jobs-for-graduates"&gt;traction&lt;/a&gt;. There are a couple of high-profile names and a handful of new kids on the block, mostly in the U.S. and Europe, each with different methods and results; in this post I‚Äôll explain how things work at &lt;a href="http://www.makersacademy.com/"&gt;Makers Academy&lt;/a&gt; ‚Äî the bootcamp I‚Äôm currently attending ‚Äî and introduce their take on some of the tech industry‚Äôs best practices.&lt;/p&gt;

&lt;p&gt;The pitch? Twelve weeks of highly immersive learning to make you into a full-stack junior developer.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;D≈çj≈ç kun&lt;/strong&gt;: a Japanese martial arts term literally meaning training hall rules. They are generally posted at the ‚Äúfront‚Äù of the dojo (&lt;em&gt;shomen&lt;/em&gt;) and outline behaviour expected and disallowed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id="gameplan"&gt;Game Plan&lt;/h2&gt;

&lt;p&gt;Makers Academy is not a &lt;em&gt;school&lt;/em&gt;. There are no lectures, no grades, no exams and no certificates (though there are plenty of frowns and blank stares when explaining this to friends and family). Each of the twelve weeks is dedicated to introducing a new topic, be it a language, framework or technology, and building on previous learning, with a particular focus on best practices (particularly &lt;strong&gt;extreme programming&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;The technology stack focuses on Ruby on Rails and AngularJS, two of the most popular frameworks around, and of course all of the bells and whistles that come with them: &lt;em&gt;if you‚Äôre allergic to tech acronyms look away now!&lt;/em&gt; OOD, relational databases, git, HTML/CSS/JS, Bootstrap, jQuery, HTTP, AJAX, MVC/MV*, Chicago vs. London-style and a slew of testing suites to name a few, plus all the opportunity in the world to explore! (Closing HTML tags got you down? Try HAML! Sick of missing out a semicolon? CoffeeScript is your friend!) One week is dedicated entirely to doing what you like and, in just five days, I ended up building a simple API for a to-do list app in Node.js, Express and MongoDB - all of which meant nothing to me three months ago, and none of which are taught on the course!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Attitude. Methodology. Technology. In that order.
  ‚Äî &lt;cite&gt;overheard at Makers&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Seems too good to be true, right? Nobody‚Äôs expecting to become a master of all of the above in just 12 weeks (16 if you count the pre-course work), but for beginners to be able to comfortably put every one of those things together to build an application is one hell of an achievement. So here‚Äôs how it‚Äôs done‚Ä¶&lt;/p&gt;

&lt;h2 id="challengify"&gt;Challengify&lt;/h2&gt;

&lt;p&gt;If I didn‚Äôt lose you with the technology name-dropping, you might be wondering how you might learn all of the above if there are no lectures. Each week comes with a weekly challenge: a set of tasks, walkthroughs and resources to work through to build increasingly complex applications. Similarly, each weekend has a dedicated solo challenge to build another application, this time without guiding materials. The coaches are at hand and run twice-daily &lt;strong&gt;stand-ups&lt;/strong&gt; (15 minute meetings in small groups to discuss successes and blockers) and &lt;strong&gt;break-outs&lt;/strong&gt; (more in-depth discussions) on important or difficult subjects, and this flexibility allows them to tailor the course to each cohort.&lt;/p&gt;

&lt;p&gt;I think the benefits of this approach are self-evident. Framing things as a challenge gives greater motivation and sense of achievement, and encapsulates the topics neatly. It gives you the flexibility to learn at your own pace, whichever way suits you best, as well as the freedom to explore the things that tickle your fancy. It can be improved on the fly, with students and alumni constantly contributing to the material (through pull requests on GitHub) and staff tweaking it and refreshing it constantly to incorporate feedback and keep it relevant. Notice how none of those things can be said about your university syllabus?&lt;/p&gt;

&lt;p&gt;Crucially, you &lt;em&gt;learn by doing&lt;/em&gt;. But more on that later.&lt;/p&gt;

&lt;h2 id="pairprogramming"&gt;Pair-programming&lt;/h2&gt;

&lt;p&gt;This now widespread technique involves two programmers working on the same codebase simultaneously, often sitting side by side. If you‚Äôve never tried coding, you should know that it is inherently solitary ‚Äî have you ever tried writing an essay with another person?? Nevertheless, the benefits are enormous and the industry has caught on to this.&lt;/p&gt;

&lt;p&gt;Simply put, it makes it easier to spot errors if two people are working on the same code, but most of all it allows the pair to think more broadly, discuss difficulties and alternatives, and ultimately contribute two diverse approaches. The interaction lets you to step out of your jumbled train of thought, forcing you to explain your reasonings and giving you the space to observe the work more objectively. It can often feel unnatural or frustrating, but it‚Äôs a learned skill akin to some kind of &lt;strong&gt;supercharged team-working&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It also just makes the whole thing more fun!&lt;/p&gt;

&lt;h2 id="testdriven"&gt;Test-driven&lt;/h2&gt;

&lt;p&gt;Along with pairing, though far more divisive, &lt;strong&gt;test-driven development&lt;/strong&gt; is one of the cornerstones of extreme programming and highly regarded at Makers (and some of the best software development companies). Along with pairing, it‚Äôs one of the most difficult things to wrap your head around when becoming a developer, but when it clicks you never go back.&lt;/p&gt;

&lt;p&gt;The idea is to write some code by first writing a test for it. You watch this test fail. You then write the simplest code you can to make it work. It passes, so you improve (refactor) that code. Then you move on to the next test.&lt;/p&gt;

&lt;p&gt;Sound backwards? But lets imagine that essay from earlier, or a client presentation. First you write down a key question; then you answer it in the simplest way possible; then you improve that answer to make sure it says exactly what you want it to, and move on to the next question. Just writing that example made me think it‚Äôs an excellent way to go about it! Your essay stays concise and to the point, covering all the key issues from the reader‚Äôs perspective without becoming muddled and growing out of hand from sitting down and writing whatever falls out of your head all in one long sitting. Simple.&lt;/p&gt;

&lt;h2 id="learningtolearn"&gt;Learning to Learn&lt;/h2&gt;

&lt;p&gt;As mentioned, the coaches and staff at Makers fully embrace a philosophy of &lt;em&gt;learning by doing&lt;/em&gt;: by providing resources and support, setting a challenge and then stepping back, they provide students with the opportunity to get to the answer themselves. This has a tremendous effect on problem solving and retention; after all, would you learn more from listening to a cook talk about the difference between a pie and a souffl√© or by grabbing two or three recipe books, all the ingredients you can carry, and cracking away at it yourself for a whole weekend? Sure, you‚Äôre first attempt will look (and taste) like that weird thing you made out of play-dough when you were three that your parents still keep on the mantelpiece. But each time will become more intuitive as you learn from your mistakes and your brain can attach meaning and correlate concepts by the sheer act of doing.&lt;/p&gt;

&lt;p&gt;There are a whole lot of mistakes to be made. Programming is about problem-solving, so there is no value in being spoon-fed a solution (much like life). It is difficult to come to terms with a reality in which you are consistently failing and feeling stupid, particularly to those who have been comfortably succeeding at school and work for many years, but solving that problem with your partner and seeing all your tests go green becomes a highly effective ‚Äî and highly addictive ‚Äî motivator that increases your learning exponentially.&lt;/p&gt;

&lt;h2 id="portfolio"&gt;Portfolio&lt;/h2&gt;

&lt;p&gt;The final two weeks are, in true Makers style, dedicated to projects. The first is a three-day hackathon and the second is a fully fledged prototype, each of which is selected by voting up pitches at a ‚Äújamboree.‚Äù These, coupled with some of the weekly challenges, make for a very solid starting point to creating your online portfolio ‚Äî and if there was ever a simple link between coding and art, that‚Äôs it right there.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There‚Äôs a gong on the third floor at Makers, and every time an alumni gets a job it is rung, and the whole room explodes into applause.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id="isallofthisevenpossible"&gt;Is All of This Even Possible?&lt;/h2&gt;

&lt;p&gt;The short answer is yes. It requires a lot of commitment, hard work and love for the craft. However, the teaching philosophy and environment makes it feel effortless and the attention to attitude and best-practices makes for great developers.&lt;/p&gt;

&lt;p&gt;I only discussed a few of the aspects of life at Makers, some of which deserve (and will get) their own post, but there‚Äôs so much more going on, each with thoughtful and interesting reasons: self-setting salaries, regular yoga and meditation, an online version of the course, flashmobs and ping pong, meet-ups and hackathons‚Ä¶ You can read all about them on the &lt;a href="http://blog.makersacademy.com/"&gt;Makers Academy blog&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title>Expose Your Vulnerabilities</title><description>&lt;h2 id="dayzero"&gt;Day Zero&lt;/h2&gt;

&lt;p&gt;Today was our first day at &lt;a href="http://www.makersacademy.com/"&gt;Makers Academy&lt;/a&gt;, and we were told that we would write no code. Instead, I learnt the names and birthplaces of more than 60 people in under one hour, met the CEO and tried vinyasa flow yoga for the first time. Because today&lt;/p&gt;</description><link>http://localhost:2368/day-zero/</link><guid isPermaLink="false">fb7cf3c9-cd09-4328-8cb0-5f4a3666ba8c</guid><category>coding</category><category>bootcamp</category><dc:creator>Mic Cassano</dc:creator><pubDate>Mon, 18 Jan 2016 18:04:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2016/03/picjumbo-com_HNCK0413-1.jpg" medium="image"/><content:encoded>&lt;h2 id="dayzero"&gt;Day Zero&lt;/h2&gt;

&lt;img src="http://localhost:2368/content/images/2016/03/picjumbo-com_HNCK0413-1.jpg" alt="Expose Your Vulnerabilities"&gt;&lt;p&gt;Today was our first day at &lt;a href="http://www.makersacademy.com/"&gt;Makers Academy&lt;/a&gt;, and we were told that we would write no code. Instead, I learnt the names and birthplaces of more than 60 people in under one hour, met the CEO and tried vinyasa flow yoga for the first time. Because today was all about introducing us in earnest to how things are done here.&lt;/p&gt;

&lt;h3 id="whyzero"&gt;Why Zero?&lt;/h3&gt;

&lt;p&gt;Today was day zero for several reasons: because we‚Äôre starting from scratch, re-wiring our brains and &lt;a href="http://blog.makersacademy.com/learning-how-to-learn/"&gt;learning to learn&lt;/a&gt;; because in computing, you start counting &lt;a href="https://en.wikipedia.org/wiki/Zero-based_numbering"&gt;at zero&lt;/a&gt; (yep); and because, like with &lt;a href="http://bit.ly/1SZAZ43"&gt;zero-days&lt;/a&gt; (undisclosed computer application flaws that can be exploited by hackers) we were encouraged to expose our vulnerabilities, and take advantage of the overwhelming pressure we will be under in the coming twelve weeks to tap into our ambitions and fears to ‚Äúbecome the best version of ourselves‚Äù. It does sound fluffy and new-age, I‚Äôll concede, but I can assure you that it was refreshing to see people who barely know each other express authentic compassion, encouragement, a keenness to see each other succeed and an iron fist against discrimination and competition in an educational and professional environment.&lt;/p&gt;

&lt;h3 id="lifesanamegame"&gt;Life‚Äôs a Name Game&lt;/h3&gt;

&lt;p&gt;First and foremost, we were treated to some breakfast: some welcome calories and stimulants in the Makers kitchen, respite from the cold London air among shy chitchat with the odd familiar face. Then a quick presentation and before we knew it we were stood up in a giant circle around the hall, north of 60 people between our cohort and the staff. Amid some sighs of reluctance, we were told we would be playing the name game.&lt;/p&gt;

&lt;p&gt;‚ÄúOh great, another ‚Äòteam-building‚Äô exercise,‚Äù you‚Äôd be forgiven for thinking, as I did. Instead, all we had to do was go around in a circle, saying our names and birthplaces, but only after having repeated those of every person preceding us. Never have I learnt so many people‚Äôs names in one go (not even close, and in under an hour to boot) and I could recite every one of them to you right now. Simple. Effective. And with quite a few laughs. No more awkward chitchat next to the coffee machine.&lt;/p&gt;

&lt;h3 id="selfandother"&gt;Self and Other&lt;/h3&gt;

&lt;p&gt;The next presentation (read: conversation) was a touching and invigorating account from Dana, Makers‚Äô &lt;em&gt;Chief Joy Officer&lt;/em&gt;, and Jordan, one of Makers‚Äô first alumni, on all things non-coding at Makers: tips on how to make it through the course, how to make the most of it, how to reach out for support, and how everyone is welcome, freaks, geeks, LGBTQs, muslims, buddhists, Germans from Singapore and Brits from Dubai‚Ää‚Äî‚ÄäI couldn‚Äôt do the conversation justice, but here are some highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We will have to work hard: as Jordan put it, MA is like a personal trainer ‚Äî it doesn‚Äôt matter if we pay them ¬£800 or ¬£8m, we‚Äôre still the ones who have to do the squats.&lt;/li&gt;
&lt;li&gt;‚Ä¶But we will struggle: programming is unlike anything we‚Äôve studied at school and failure is a central component of software development. We‚Äôll feel stupid over and over again despite being smart and likely having found most things fairly easy in school and work up until this point. That‚Äôs part of the experience.&lt;/li&gt;
&lt;li&gt;We will have to take care of ourselves: the long days, mental exhaustion, frustration, intense concentration and emotional rollercoaster that is the course will require us to listen to our bodies to avoid burnout ‚Äî hence the 2pm meditation practice and twice-weekly yoga (a surprisingly good workout, as I found out).&lt;/li&gt;
&lt;li&gt;Friends and family may not understand: if you‚Äôre reading this thinking, ‚Äúwhat the hell is he on about?‚Äù then you fall into this category. This course will take up all of our time, don‚Äôt get mad if we don‚Äôt call back the same day. (To be fair the point here was to learn to communicate this &lt;em&gt;properly&lt;/em&gt;.)&lt;/li&gt;
&lt;li&gt;Communication is key: if you‚Äôve heard this a million times, there‚Äôs a reason. Learning to communicate with peers, staff, mentors, pair partners, friends and family and learning to be genuine and authentic is the only way we‚Äôll get through this, and what will ultimately put us ahead as developers and people.&lt;/li&gt;
&lt;li&gt;Become the best version of yourself: this is a unique opportunity to dig deep and work hard to improve ourselves in every way we want to, without succumbing to the tendency of comparing ourselves to others.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="99bottlesofbeeronthewall"&gt;99 Bottles of Beer on the Wall&lt;/h2&gt;

&lt;p&gt;After a few more presentations and a code &lt;em&gt;kata&lt;/em&gt; (a coding exercise, from the Japanese for &lt;em&gt;form&lt;/em&gt;, as in the choreographed movements repeated in martial arts as training) we naturally hit the pub. Oh and writing a program that prints all the lyrics to ‚Äô99 Bottles of Beer on the Wall‚Äô is one of the first katas you do when learning to code ‚Äî coincidence? &lt;/p&gt;

&lt;h2 id="yeahwhataboutlearningtocode"&gt;Yeah, What About Learning to Code??&lt;/h2&gt;

&lt;p&gt;That starts tomorrow, and there will be LOTS of it, to the point that we will sometimes dream in code (yes, you read that right; it‚Äôs natural when you‚Äôre intently focused on something for many hours at a time). But learning to code is just the activity. The self-improvement and community-building is the core of the Makers philosophy. As the CEO of Lyst said, ‚ÄúI can teach anyone to code, but I can‚Äôt teach them not to be dicks.‚Äù This place may look like a school and sound like a cult, but today they taught us it‚Äôs a &lt;em&gt;tribe&lt;/em&gt;.&lt;/p&gt;</content:encoded></item><item><title>Becoming a Programmer</title><description>&lt;h2 id="47ronin"&gt;47 Ronin&lt;/h2&gt;

&lt;p&gt;You‚Äôve probably been there. Staring at that exam paper or spreadsheet, your mind a million miles away, surfing the waves of your imagination. You can‚Äôt &lt;em&gt;focus&lt;/em&gt;. You‚Äôre not &lt;em&gt;invested&lt;/em&gt;. You don‚Äôt know why you‚Äôre doing what you‚Äôre doing - it‚Äôs not&lt;/p&gt;</description><link>http://localhost:2368/47-ronin/</link><guid isPermaLink="false">fcca412d-cfaa-4738-bd80-df682bf9cc0c</guid><category>coding</category><category>bootcamp</category><dc:creator>Mic Cassano</dc:creator><pubDate>Sat, 16 Jan 2016 17:54:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2016/03/photo-1429051781835-9f2c0a9df6e4-1.jpeg" medium="image"/><content:encoded>&lt;h2 id="47ronin"&gt;47 Ronin&lt;/h2&gt;

&lt;img src="http://localhost:2368/content/images/2016/03/photo-1429051781835-9f2c0a9df6e4-1.jpeg" alt="Becoming a Programmer"&gt;&lt;p&gt;You‚Äôve probably been there. Staring at that exam paper or spreadsheet, your mind a million miles away, surfing the waves of your imagination. You can‚Äôt &lt;em&gt;focus&lt;/em&gt;. You‚Äôre not &lt;em&gt;invested&lt;/em&gt;. You don‚Äôt know why you‚Äôre doing what you‚Äôre doing - it‚Äôs not going to lead you to where you want to be. And you know this, even if you‚Äôre not sure where it is you want to be. Let‚Äôs face it, not everybody‚Äôs lucky enough to be able to choose what they want to do, and it‚Äôs true what they say, ‚Äúit‚Äôs never too late.‚Äù And anyway it doesn‚Äôt matter what they say. &lt;br&gt;
Time for a change. Let‚Äôs do this.&lt;/p&gt;

&lt;p&gt;It took me two tries to decide ‚Äî to &lt;em&gt;realise&lt;/em&gt; ‚Äî that I wanted to become a developer. The first time, around the time I was graduating from university with a degree in management, I had a visceral feeling that I didn‚Äôt belong to the suit-clad, PowerPoint-wielding hordes of high-paid management consultants; that there was no purpose, nothing being created or nurtured, just a perpetuation of the systemic inefficiency and greed of corporations and our misguided dogma of 10-hour days and vertical promotions. The second time, and one Masters degree in Computer Science later, I was wearing a suit and wielding a PowerPoint presentation, working as an IT consultant for those corporations. Same visceral feeling, and something had to be done. Despite the fact I look damn good in a suit.&lt;/p&gt;

&lt;p&gt;At university I had dabbled in programming in my spare time out of curiosity, watched a few screencasts and taken a few courses on &lt;a href="http://bit.ly/1J5Sprl"&gt;Codecademy&lt;/a&gt; and the likes. The subject could be a bit dry, but it was interesting stuff, as if someone had made a video game out of mathematics. I could see the potential; after all, this was the era of Facebook, Gmail, Angry Birds and WhatsApp. But I couldn‚Äôt join the dots to understand how all the different pieces fit.&lt;/p&gt;

&lt;p&gt;However, that curiosity persisted, and more importantly I slowly started to realise that the opportunities were endless. This wasn‚Äôt a career path, it was a skill, a craft, even an art form. It meant having to flex your brain to learn new ‚Äúlanguages‚Äù somewhere between a patois and an algebraic expression, solve difficult logic problems, research complex technologies and spend hours in front of a computer all to be able to print ‚ÄúHello, World!‚Äù on your computer screen. Yet suddenly you were on the other side of that screen, peeking into this Pandora‚Äôs box that promised to show you ‚Äúhow‚Äù today‚Äôs world works.&lt;/p&gt;

&lt;p&gt;And those opportunities were and still are the stuff of dreams. With a lot of time, effort and hard work I might end up working at a groundbreaking start-up, with exposed brick walls and a foosball table, or remote working from that exotic beach, or moving the needle at one of the tech giants, or even setting up my own company. Who knows! But all the while I‚Äôd be learning and improving at this powerful new skill, putting in my &lt;a href="http://read.bi/1W4CT31"&gt;10,000 hours&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So after a year in a comfy, high-paying consulting job, I decided to join &lt;a href="http://bit.ly/1cznjV3"&gt;Makers Academy&lt;/a&gt;. This blog is the story of how I spent 12 weeks with 47 curious, ambitious young men and women who set off on a path into this strange new world of software development ‚Äî 47 r≈çnin, samurai with no master ‚Äî and the team of bandits, teachers and mentors who gave us a home and a sword.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A man‚Äôs life is only a vapour that vanishes in an instant. One should spend his life doing that which he enjoys. As short as life is, it is foolish to spend it doing only the things one hates. &lt;strong&gt;- Yamamoto Tsunetomo, Hagakure: The Book of the Samurai&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item></channel></rss>